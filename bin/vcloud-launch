#!/usr/bin/env ruby

require 'vcloud/launcher'

FogVersion = Fog::VERSION.split('.')

if ( FogVersion[0].to_i == 1 ) && ( FogVersion[1].to_i < 33 )
  require 'fog/vcloud_director/models/compute/task'
  if Fog::Compute::VcloudDirector::Task.method_defined?(:non_running?)
    puts "Monkey patching Fog::Compute::VcloudDirector::Task.non_running?()"
    module Fog
      module Compute
        class VcloudDirector
          class Task < Fog::Model
            def non_running?
              if @service.show_progress? && (@last_progress ||= 0) < 100
                if status == 'running' || status == 'queued'
                  Fog::Formatador.redisplay_progressbar(progress, 100, :label => operation_name, :started_at => start_time)
                  @last_progress = progress
                elsif status == 'success'
                  Fog::Formatador.redisplay_progressbar(100, 100, :label => operation_name, :started_at => start_time)
                  @last_progress = 100
                end
              end
              ! %w(running queued).include?(status)
            end
          end
        end
      end
    end
  else
    raise "Failed to monkey patch Fog::Compute::VcloudDirector::Task.non_running?()"
  end
end

Vcloud::Launcher::Cli.new(ARGV).run
